{
	"info": {
		"_postman_id": "386bbc61-0fc9-4b50-a311-313f178b8add",
		"name": "Capstone",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39843679",
		"_collection_link": "https://cloudy-crescent-10909.postman.co/workspace/Khan-Academy~2cd614fa-8b24-4044-ad2d-ca344dd7ca6e/collection/39843679-386bbc61-0fc9-4b50-a311-313f178b8add?action=share&source=collection_link&creator=39843679"
	},
	"item": [
		{
			"name": "Get User List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"TC1:Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"TC2:Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"TC3:Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Response header 'Content-Type' includes 'json'\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    const contentType = pm.response.headers.get(\"Content-Type\").toLowerCase();\r",
							"    console.log(\"Content-Type Header:\", contentType);\r",
							"    pm.expect(contentType).to.include(\"json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"TC2:Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"TC3:Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/users/{{ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user & run",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"TC1: Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							" \r",
							"pm.test(\"TC2: Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							" \r",
							" \r",
							"pm.test(\"TC3: Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"delectus\");\r",
							"});\r",
							" \r",
							" \r",
							"pm.test(\"TC4: Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							" \r",
							" \r",
							"pm.test(\"TC5: Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							" \r",
							" \r",
							"let responseData = pm.response.json();\r",
							"if (responseData.id) {\r",
							"    pm.globals.set(\"IDa\", responseData.id);\r",
							"    console.log(\"Saved IDa:\", responseData.id);\r",
							"} else {\r",
							"    console.warn(\"No 'id' found in response to set as global variable.\");\r",
							"}\r",
							" \r",
							" "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 1,\r\n    \"id\": \"101\",\r\n    \"title\": \"delectus\",\r\n    \"completed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"TC1: Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							" \r",
							"pm.test(\"TC2: Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							" \r",
							" \r",
							"pm.test(\"TC3: Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"aut autem\");\r",
							"});\r",
							" \r",
							" \r",
							"pm.test(\"TC4: Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							" \r",
							" \r",
							"pm.test(\"TC5: Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							" \r",
							" \r",
							"let responseData = pm.response.json();\r",
							"if (responseData.id) {\r",
							"    pm.globals.set(\"IDa\", responseData.id);\r",
							"    console.log(\"Saved IDa:\", responseData.id);\r",
							"} else {\r",
							"    console.warn(\"No 'id' found in response to set as global variable.\");\r",
							"}\r",
							" \r",
							" "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 1,\r\n    \"id\": \"103\",\r\n    \"title\": \"aut autem\",\r\n    \"completed\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"TC1: Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							" \r",
							"pm.test(\"TC2: Completed title updated\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"ipsa dolores vel facilis ut\");\r",
							"});\r",
							" "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"title\":\"ipsa dolores vel facilis ut\"    \r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/users/100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users",
						"100"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"TC2: User title updated\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"dolores vel facilis ut\");\r",
							"});\r",
							" "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"title\": \"dolores vel facilis ut\"\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/users/118",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users",
						"118"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"TC1:Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"TC2:Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"TC3:Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							" "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/users/195",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users",
						"195"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "var1",
			"value": "",
			"type": "string"
		},
		{
			"key": "var2",
			"value": "",
			"type": "string"
		},
		{
			"key": "var3",
			"value": "",
			"type": "string"
		}
	]
}